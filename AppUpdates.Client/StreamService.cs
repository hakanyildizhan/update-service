//------------------------------------------------------------------------------
// <auto-generated>
//     Bu kod araç tarafından oluşturuldu.
//     Çalışma Zamanı Sürümü:4.0.30319.42000
//
//     Bu dosyada yapılacak değişiklikler yanlış davranışa neden olabilir ve
//     kod yeniden oluşturulursa kaybolur.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IStreamService")]
public interface IStreamService
{
    
    // CODEGEN: UploadFile işlemi RPC ya da belge kaydırmalı olmadığından, ileti sözleşmesi oluşturuluyor.
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamService/UploadFile", ReplyAction="http://tempuri.org/IStreamService/UploadFileResponse")]
    UploadFileResponse UploadFile(RemoteFileInfo request);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamService/UploadFile", ReplyAction="http://tempuri.org/IStreamService/UploadFileResponse")]
    System.Threading.Tasks.Task<UploadFileResponse> UploadFileAsync(RemoteFileInfo request);
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class RemoteFileInfo
{
    
    [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
    public string FileName;
    
    [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
    public long Length;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    public System.IO.Stream FileByteStream;
    
    public RemoteFileInfo()
    {
    }
    
    public RemoteFileInfo(string FileName, long Length, System.IO.Stream FileByteStream)
    {
        this.FileName = FileName;
        this.Length = Length;
        this.FileByteStream = FileByteStream;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
public partial class UploadFileResponse
{
    
    public UploadFileResponse()
    {
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IStreamServiceChannel : IStreamService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class StreamServiceClient : System.ServiceModel.ClientBase<IStreamService>, IStreamService
{
    
    public StreamServiceClient()
    {
    }
    
    public StreamServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public StreamServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public StreamServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public StreamServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    UploadFileResponse IStreamService.UploadFile(RemoteFileInfo request)
    {
        return base.Channel.UploadFile(request);
    }
    
    public void UploadFile(string FileName, long Length, System.IO.Stream FileByteStream)
    {
        RemoteFileInfo inValue = new RemoteFileInfo();
        inValue.FileName = FileName;
        inValue.Length = Length;
        inValue.FileByteStream = FileByteStream;
        UploadFileResponse retVal = ((IStreamService)(this)).UploadFile(inValue);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<UploadFileResponse> IStreamService.UploadFileAsync(RemoteFileInfo request)
    {
        return base.Channel.UploadFileAsync(request);
    }
    
    public System.Threading.Tasks.Task<UploadFileResponse> UploadFileAsync(string FileName, long Length, System.IO.Stream FileByteStream)
    {
        RemoteFileInfo inValue = new RemoteFileInfo();
        inValue.FileName = FileName;
        inValue.Length = Length;
        inValue.FileByteStream = FileByteStream;
        return ((IStreamService)(this)).UploadFileAsync(inValue);
    }
}
